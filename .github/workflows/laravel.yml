name: Testing

on:
  push:
    branches:
      - main
    tags:
      - v*.*.*
  pull_request:
    branches:
      - main

jobs:
  laravel-tests:
    env:
      DB_CONNECTION: sqlite
      DB_DATABASE: database/database.sqlite

    runs-on: ubuntu-latest

    services:
      redis:
        image: redis

    steps:
    - uses: shivammathur/setup-php@v2
      with:
        php-version: '8.0'
      env:
        runner: self-hosted
    - uses: actions/checkout@v2
    - name: Get composer cache directory
      id: composer-cache
      run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
        restore-keys: ${{ runner.os }}-composer-
    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"
    - name: Install Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
    - name: Generate key
      run: php artisan key:generate
    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache
    - name: Create Database
      run: |
        mkdir -p database
        touch database/database.sqlite
    - name: Migrate database
      run: |
        php artisan migrate:install
        php artisan migrate
    - name: Execute tests (Unit and Feature tests) via PHPUnit
      run: vendor/bin/phpunit

#  build-image:
##    needs: laravel-tests
#    runs-on: ubuntu-22.04
#
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v3
#      - name: Login to Docker Hub
#        uses: docker/login-action@v2
#        with:
#          username: ${{ secrets.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_TOKEN }}
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v2
#      - name: Build and push
#        uses: docker/build-push-action@v4
#        with:
#          context: .
#          file: ../docker/build/Dockerfile
#          push: true
#          tags: ${{ secrets.DOCKERHUB_USERNAME }}/goacs:latest
